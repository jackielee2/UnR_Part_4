==================================================================
1. 프로젝트 준비
	[ 참고 : 언리얼 엔진 4 블루프린트 게임 만들기. ]

	-	위 책의 내용을 바탕으로 게임을 만들면서 언리얼을 익힙니다.
==================================================================
-----------------------------------
0]	게임 소개
-----------------------------------

	-	아파치 헬기를 조종하여 적을 물리치는 게임.



-----------------------------------
1]	프로젝트 생성
-----------------------------------

	-	템플릿 선택		:	기본
		
		프로젝트 세팅		:	블루프린트 / 시작용 콘텐츠 포함.



-----------------------------------
2]	환경 설정
-----------------------------------

	1)	폴더 생성.
		-	에셋들을 카테고리 별로 관리하기 위해 폴더를 생성한다.
		-	[ _Apache_ 폴더 ] 생성.
			-	하위 폴더 생성.
				[ Maps ]
				[ Blueprints ]
				[ Materials ]
				[ Textures ]
				[ Meshes ]
				[ Audios ]


	2)	새 레벨 만들기.
		-	[ 메뉴 ] > [ 파일 ] > [ 새 레벨 ] > [ Default ] 선택.
		-	저장.
			-	이름			:	"Apache"
			-	폴더 위치	:	[ _Apache_ ] > [ Maps ]



-----------------------------------
3]	프로젝트 세팅
-----------------------------------

	1)	기본 맵 설정.

		-	프로젝트 나 게임 시작시 처음 열리게 될 맵 설정.
		-	[ 메뉴 ] > [ 편집 ] > [ 프로젝트 세팅 ] >
			[ 프로젝트 ] > [ 맵 & 모드 ] > [ Default Maps ] > 
			[ 에디터 시작 맵 ] / [ 게임 기본 맵 ]		:	[ Apache ]



-----------------------------------
4]	리소스 임포트
-----------------------------------	
	

	1)	언리얼 엔진에서 사용할 수 있는 파일 포맷.

		리소스		|	확장자								|	용도
		================================================================================
		3D Object	|	FBX									|	Static Mesh
		--------------------------------------------------------------------------------
		2D Image	|	jpg, png, tga, bmp, psd, raw 등...	|	텍스쳐, UI
		--------------------------------------------------------------------------------
		Audio		|	Wav									|	사운드
		--------------------------------------------------------------------------------

		**	리소스 파일의 경우 한글 이름을 사용이 가능함.
			PC 플랫폼에서는 문제가 없으나 모바일에서는 리소스가 화면에 표시되지 않는 문제가 있을수 있으므로
			한글 이름사용 비권장.
			->	파일명 뿐만 아니라 프로그래밍, 블루 프린트도 한글 비권장.

	
	2)	리소스 파일들을 적당한 폴더로 임포트.
		-	각 파일들을 해당 폴더로 드래그.
			-	[ Audios ]
				-	[ BGM.wav ], [ Gameover.wav ], [ RotorSound.wav ]

			-	[ Textures ]
				-	[ Camouflage.tgs ]

			-	[ Meshes ]
				-	[ Apache.FBX ]
					
					** [ FBX 임포트 옵션 ] 설정 후 [ 모두 임포트 ]
						-	[ Mesh ] > [ Combine Meshes ]	:	Off
							-	3D 모델이 한 덩어리로 임포트.
							-	모델의 부품을 개별적으로 조작하기 위한 옵션.

						-	함께 임포트된 머터리얼은 모두 [ Materials 폴더 ] 이동.
						


-----------------------------------
5]	스태틱 메시 에디터
-----------------------------------

	-	개요.
		( 참고 : https://docs.unrealengine.com/udk/Three/StaticMeshEditorUserGuideKR.html#%EC%86%8C%EA%B0%9C )
		-	스태틱 메시 애셋의 프로퍼티를 조작하거나,
			모양이나 콜리전 또는 UV 등을 미리보는 데 사용되는 툴.
			

	
	-	실습.		
		-	[ Meshes 폴더 ] > [ Apache_Body ] 열기.



	1)	동체의 콜리전 바꾸기.

		-	콜리전
			-	스태틱 메시에 설정한 충돌 감지 구역.
			-	기본 설정	:	[ 26면체 단순화 콜리전 ].
				확인			:	[ 표시 ( 스테틱 매시 에디터 화면 좌상단 ) ] > [ 단순 콜리전 ]

		-	컬리전 수정
			1)	콜리전 제거
				-	[ 메뉴 ] > [ 콜리전 ] > [ 콜리전 제거 ]
			2)	콜리전 정보 갱신 및 적용
				-	[ 메뉴 ] > [ 콜리전 ] > [ 자동 컨벡스 콜리전 ]
					[ 헐 갯수 ]			:	24
					[ 최대 헐 버텍스 ]	:	12
					[ 헐 정밀도 ]		:	100000
				-	좀더 디테일한 콜리전 생성.
					-	콜리전이 데티일 할 수록 충돌 관련 연산량이 증가.



	2)	로터와 꼬리날개의 콜리전 제거.

		-	[ Apache_Rotor ], [ Apache_Tail ]의 콜리전 제거.
			-	로터와 꼬리날개 회전시 헬기의 동체와 불필요한 충돌 이벤트가 
				발생하는 것 방지.
			-	[ Apache_Rotor ], [ Apache_Tail ]을 연뒤 각각
				[ 메뉴 ] > [ 콜리전 ] > [ 콜리전 제거 ]



	3)	로터와 꼬리날개의 피벗 확인.
		
		-	피벗
			-	스태틱 메시의 기준점.
			-	회전하는 물체의 회전 축.
			-	피벗 위치 확인.
				-	[ 스테틱 메시 에디터 ] > [ 툴바 ] > [ 피벗 표시 ]
			-	에디터에서도 피벗 설정이 가능( http://today7e.blogspot.com/2017/09/unreal4-editor-mesh-mesh.html ).
				-	하지만 일괄적인 업무를 위해 모델링 툴에서 피벗을 맞춘 후 다시 임포트할 것.
				


==================================================================//